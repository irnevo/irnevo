#include <stdio.h>
#include <stdlib.h>
#define MAX 10

struct Node {
    int vertex;
    struct Node* next;
};

struct Node* createNode(int v) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->vertex = v;
    newNode->next = NULL;
    return newNode;
}

void addEdge(struct Node* adjList[], int src, int dest) {
    struct Node* newNode = createNode(dest);
    newNode->next = adjList[src];
    adjList[src] = newNode;
}

void displayAdjList(struct Node* adjList[], int n) {
    int i;
    for (i = 0; i < n; i++) {
        struct Node* temp = adjList[i];
        printf("Vertex %d: ", i + 1);
        while (temp) {
            printf("%d -> ", temp->vertex + 1);
            temp = temp->next;
        }
        printf("NULL\n");
    }
}

int main() {
    int graph[MAX][MAX], i, j, n;
    struct Node* adjList[MAX];

    printf("Enter the number of vertices: ");
    scanf("%d", &n);

    printf("Enter the adjacency matrix:\n");
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            scanf("%d", &graph[i][j]);
        }
    }

    // Initialize adjacency list
    for (i = 0; i < n; i++) {
        adjList[i] = NULL;
    }

    // Convert adjacency matrix to adjacency list
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            if (graph[i][j] == 1) {
                addEdge(adjList, i, j);
            }
        }
    }

    displayAdjList(adjList, n);
    return 0;
}
