#include <stdio.h>
#define MAX 10

int queue[MAX], front = -1, rear = -1;

void enqueue(int v) {
    if (rear == MAX - 1)
        return;
    if (front == -1)
        front = 0;
    rear++;
    queue[rear] = v;
}

int dequeue() {
    int v;
    if (front == -1)
        return -1;
    v = queue[front];
    if (front == rear)
        front = rear = -1;
    else
        front++;
    return v;
}

void bfs(int graph[MAX][MAX], int n, int start) {
    int visited[MAX], v, i;
    for (i = 0; i < MAX; i++) {
        visited[i] = 0;
    }
    
    enqueue(start);
    visited[start] = 1;

    while (front != -1) {
        v = dequeue();
        printf("%d ", v + 1);
        for (i = 0; i < n; i++) {
            if (graph[v][i] == 1 && !visited[i]) {
                enqueue(i);
                visited[i] = 1;
            }
        }
    }
}

int main() {
    int graph[MAX][MAX], i, j, n, start;

    printf("Enter the number of vertices: ");
    scanf("%d", &n);

    printf("Enter the adjacency matrix:\n");
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            scanf("%d", &graph[i][j]);
        }
    }

    printf("Enter the starting vertex: ");
    scanf("%d", &start);

    printf("BFS traversal: ");
    bfs(graph, n, start - 1);
    return 0;
}
