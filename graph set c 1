#include <stdio.h>
#define MAX 10

void displayMatrix(int graph[MAX][MAX], int n) {
    int i, j;
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            printf("%d ", graph[i][j]);
        }
        printf("\n");
    }
}

void transposeMatrix(int graph[MAX][MAX], int transposed[MAX][MAX], int n) {
    int i, j;
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            transposed[j][i] = graph[i][j];
        }
    }
}

void adjacencyList(int transposed[MAX][MAX], int n) {
    int i, j;
    for (i = 0; i < n; i++) {
        printf("Vertex %d: ", i + 1);
        for (j = 0; j < n; j++) {
            if (transposed[i][j] == 1) {
                printf("%d ", j + 1);
            }
        }
        printf("\n");
    }
}

int main() {
    int graph[MAX][MAX], transposed[MAX][MAX];
    int n, i, j; // Move declaration of i and j here

    printf("Enter the number of vertices: ");
    scanf("%d", &n);

    printf("Enter the adjacency matrix:\n");
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            scanf("%d", &graph[i][j]);
        }
    }

    printf("\nOriginal Adjacency Matrix:\n");
    displayMatrix(graph, n);

    transposeMatrix(graph, transposed, n);
    
    printf("\nTransposed Adjacency Matrix:\n");
    displayMatrix(transposed, n);

    printf("\nAdjacency List of Transposed Matrix:\n");
    adjacencyList(transposed, n);

    return 0;
}
