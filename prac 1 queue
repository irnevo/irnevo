#include <stdio.h>

typedef struct {
    int data[5];
    int front;
    int rear;
} Queue;

void initialize(Queue* q) {
    q->front = 0;
    q->rear = 0;
}

int isEmpty(Queue* q) {
    return q->front == q->rear;
}

int isFull(Queue* q) {
    return (q->rear + 1) % 5 == q->front;
}

void insert(Queue* q, int value) {
    int temp;
    if (isFull(q)) {
        printf("Queue is full\n");
        return;
    }
    q->data[q->rear] = value;
    q->rear = (q->rear + 1) % 5;
    printf("Element inserted successfully\n");
}

int delete(Queue* q) {
    int value;
    if (isEmpty(q)) {
        printf("Queue is empty\n");
        return -1;
    }
    value = q->data[q->front];
    q->front = (q->front + 1) % 5;
    return value;
}

void display(Queue* q) {
    int i;
    i = q->front;
    if (isEmpty(q)) {
        printf("Queue is empty\n");
        return;
    }
    do {
        printf("%d ", q->data[i]);
        i = (i + 1) % 5;
    } while (i != q->rear);
    printf("\n");
}

int peek(Queue* q) {
    int value;
    if (isEmpty(q)) {
        printf("Queue is empty\n");
        return -1;
    }
    value = q->data[q->front];
    return value;
}

int main() {
    Queue q;
    initialize(&q);
    insert(&q, 1);
    insert(&q, 2);
    insert(&q, 3);
    display(&q);
    printf("Deleted element: %d\n", delete(&q));
    display(&q);
    printf("Peek element: %d\n", peek(&q));
    return 0;
}
