#include <stdio.h>
#include <conio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

// Function to insert a node at the end of the list
void insertAtEnd(struct Node** head, int data) {
    struct Node* new_node;
    struct Node* temp;

    new_node = (struct Node*)malloc(sizeof(struct Node));
    new_node->data = data;
    new_node->next = NULL;

    if (*head == NULL) {
        *head = new_node;
        return;
    }

    temp = *head;
    while (temp->next != NULL) {
        temp = temp->next;
    }
    temp->next = new_node;
}

// Function to sort the linked list in ascending order
void sortList(struct Node* head) {
    struct Node* current;
    struct Node* index;
    int temp;

    if (head == NULL) {
        return;
    }

    current = head;
    while (current != NULL) {
        index = current->next;
        while (index != NULL) {
            if (current->data > index->data) {
                temp = current->data;
                current->data = index->data;
                index->data = temp;
            }
            index = index->next;
        }
        current = current->next;
    }
}

// Function to display the elements of the list
void displayList(struct Node* head) {
    struct Node* temp;
    
    temp = head;
    printf("Sorted List: ");
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}

int main() {
    struct Node* head;
    int n, value, i;

    head = NULL;
    clrscr();  // Clear screen for Turbo C

    printf("Enter the number of elements: ");
    scanf("%d", &n);

    for (i = 0; i < n; i++) {
        printf("Enter element %d: ", i + 1);
        scanf("%d", &value);
        insertAtEnd(&head, value);
    }

    sortList(head);

    printf("\n");
    displayList(head);

    getch();  // Wait for key press in Turbo C
    return 0;
}
