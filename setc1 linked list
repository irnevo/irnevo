#include <stdio.h>
#include <conio.h>  // For Turbo C specific functions
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

void insertAtEnd(struct Node** head, int data) {
    struct Node* new_node;
    new_node = (struct Node*)malloc(sizeof(struct Node));
    new_node->data = data;
    new_node->next = NULL;
    if (*head == NULL) {
        *head = new_node;
        return;
    }
    struct Node* temp = *head;
    while (temp->next != NULL) {
        temp = temp->next;
    }
    temp->next = new_node;
}

struct Node* findIntersection(struct Node* head1, struct Node* head2) {
    struct Node* result = NULL;
    struct Node* temp1 = head1;
    struct Node* temp2;
    while (temp1 != NULL) {
        temp2 = head2;
        while (temp2 != NULL) {
            if (temp1->data == temp2->data) {
                insertAtEnd(&result, temp1->data);
                break;
            }
            temp2 = temp2->next;
        }
        temp1 = temp1->next;
    }
    return result;
}

void displayList(struct Node* head) {
    struct Node* temp = head;
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}

int main() {
    struct Node* head1 = NULL;
    struct Node* head2 = NULL;
    struct Node* intersection = NULL;
    int value, choice;

    clrscr();  // Clears the screen

    while (1) {
        printf("\n1. Insert into List 1\n2. Insert into List 2\n3. Find Intersection\n4. Display List 1\n5. Display List 2\n6. Exit\n");
        printf("Enter choice: ");
        scanf("%d", &choice);
        
        if (choice == 1) {
            printf("Enter value for List 1: ");
            scanf("%d", &value);
            insertAtEnd(&head1, value);
        } else if (choice == 2) {
            printf("Enter value for List 2: ");
            scanf("%d", &value);
            insertAtEnd(&head2, value);
        } else if (choice == 3) {
            intersection = findIntersection(head1, head2);
            printf("Intersection List: ");
            displayList(intersection);
        } else if (choice == 4) {
            printf("List 1: ");
            displayList(head1);
        } else if (choice == 5) {
            printf("List 2: ");
            displayList(head2);
        } else if (choice == 6) {
            break;
        } else {
            printf("Invalid choice.\n");
        }
    }

    getch();  // Waits for a key press before closing
    return 0;
}
