#include <stdio.h>
#include <conio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

void insert(struct Node** head, int data) {
    struct Node* new_node = (struct Node*)malloc(sizeof(struct Node));
    new_node->data = data;
    new_node->next = *head;
    *head = new_node;
}

void divideList(struct Node* head, struct Node** firstHalf, struct Node** secondHalf) {
    struct Node* slow = head;
    struct Node* fast = head->next;

    while (fast != NULL && fast->next != NULL) {
        slow = slow->next;
        fast = fast->next->next;
    }

    *firstHalf = head;
    *secondHalf = slow->next;
    slow->next = NULL; // End the first half
}

void displayList(struct Node* head) {
    struct Node* temp = head;
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}

int main() {
    struct Node* head = NULL;
    struct Node* firstHalf = NULL;
    struct Node* secondHalf = NULL;
    int n, value, i;

    clrscr();

    printf("Enter number of elements for the list: ");
    scanf("%d", &n);
    printf("Enter elements for the list:\n");
    for (i = 0; i < n; i++) {
        printf("Element %d: ", i + 1);
        scanf("%d", &value);
        insert(&head, value);
    }

    printf("Original List: ");
    displayList(head);

    divideList(head, &firstHalf, &secondHalf);

    printf("First Half: ");
    displayList(firstHalf);
    printf("Second Half: ");
    displayList(secondHalf);

    getch();
    return 0;
}
